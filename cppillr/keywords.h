// Copyright (C) 2019  David Capello
//
// This file is released under the terms of the MIT license.
// Read LICENSE.txt for more information.

#ifndef PP_KEYWORD
#define PP_KEYWORD(x)
#endif

#ifndef KEYWORD
#define KEYWORD(x)
#endif

PP_KEYWORD(define)
PP_KEYWORD(elif)
PP_KEYWORD(else)
PP_KEYWORD(endif)
PP_KEYWORD(error)
PP_KEYWORD(if)
PP_KEYWORD(ifdef)
PP_KEYWORD(ifndef)
PP_KEYWORD(include)
PP_KEYWORD(line)
PP_KEYWORD(pragma)
PP_KEYWORD(undef)

KEYWORD(alignas)
KEYWORD(alignof)
KEYWORD(asm)
KEYWORD(auto)
KEYWORD(bool)
KEYWORD(break)
KEYWORD(case)
KEYWORD(catch)
KEYWORD(char)
KEYWORD(char16_t)
KEYWORD(char32_t)
KEYWORD(char8_t)
KEYWORD(class)
KEYWORD(co_await)
KEYWORD(co_return)
KEYWORD(co_yield)
KEYWORD(concept)
KEYWORD(const)
KEYWORD(const_cast)
KEYWORD(consteval)
KEYWORD(constexpr)
KEYWORD(constinit)
KEYWORD(continue)
KEYWORD(decltype)
KEYWORD(default)
KEYWORD(delete)
KEYWORD(do)
KEYWORD(double)
KEYWORD(dynamic_cast)
KEYWORD(else)
KEYWORD(enum)
KEYWORD(explicit)
KEYWORD(export)
KEYWORD(extern)
KEYWORD(false)
KEYWORD(float)
KEYWORD(for)
KEYWORD(friend)
KEYWORD(goto)
KEYWORD(if)
KEYWORD(inline)
KEYWORD(int)
KEYWORD(long)
KEYWORD(mutable)
KEYWORD(namespace)
KEYWORD(new)
KEYWORD(noexcept)
KEYWORD(nullptr)
KEYWORD(operator)
KEYWORD(private)
KEYWORD(protected)
KEYWORD(public)
KEYWORD(register)
KEYWORD(reinterpret_cast)
KEYWORD(requires)
KEYWORD(return)
KEYWORD(short)
KEYWORD(signed)
KEYWORD(sizeof)
KEYWORD(static)
KEYWORD(static_assert)
KEYWORD(static_cast)
KEYWORD(struct)
KEYWORD(switch)
KEYWORD(template)
KEYWORD(this)
KEYWORD(thread_local)
KEYWORD(throw)
KEYWORD(true)
KEYWORD(try)
KEYWORD(typedef)
KEYWORD(typeid)
KEYWORD(typename)
KEYWORD(union)
KEYWORD(unsigned)
KEYWORD(using)
KEYWORD(virtual)
KEYWORD(void)
KEYWORD(volatile)
KEYWORD(wchar_t)
KEYWORD(while)

#undef PP_KEYWORD
#undef KEYWORD
